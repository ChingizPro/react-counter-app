{"version":3,"sources":["components/navbar.jsx","components/counter.jsx","components/counters.jsx","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","console","log","className","badgeNumber","Counter","onClick","onDecrement","this","getBadgeClasses","checkCount","onIncrement","nums","onDelete","id","classes","value","Component","Counters","onReset","counters","map","counter","App","state","handleReset","c","setState","handleDelete","counterId","filter","handleIncrement","index","indexOf","handleDecrement","badgeCount","sum","Fragment","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e3729548.chunk.js","sourcesContent":["const Navbar = (props) => {\r\n    console.log(\"Navbar - Render\");\r\n    return (\r\n        <nav className=\"navbar navbar-light bg-light navbar-left p-3\">\r\n            <div className=\"counter-header container-fluid justify-content-start\">\r\n                <h5 className=\"text-primary mr-2\">Total number: </h5>\r\n                <span className=\"badge badge-secondary badge-pill\">{props.badgeNumber()}</span>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Counter extends Component {\r\n    // constructor () {\r\n    //     super(); // ! to use this inside constructor super() has to be used\r\n    //     this.handleIncrement = this.handleIncrement.bind(this);\r\n    //     this.handleDecrement = this.handleDecrement.bind(this);\r\n    // }\r\n\r\n    // renderList () {\r\n    //     if(this.state.items.length === 0) return <p>The array is empty!</p>;\r\n\r\n    //     return <ul>{ this.state.items.map(item => <li key={item}>{item}</li>) }</ul>;\r\n    // }\r\n\r\n    // componentDidUpdate(prevProps, prevState) {\r\n    //     console.log(\"Previous Props: \", prevProps);\r\n    //     console.log(\"Previous State: \", prevState);\r\n    // }\r\n\r\n    componentWillUnmount() {\r\n        console.log(\"Component - Unmount\");\r\n    }\r\n\r\n    render() {\r\n        console.log(\"Counter - Render\");\r\n        return (\r\n            <div className=\"mb-4 wrap\">\r\n                <button onClick={() => this.props.onDecrement(this)} className=\"btn btn-sm btn-secondary\">\r\n                    Decrement\r\n                </button>\r\n                <span className={this.getBadgeClasses()}>{this.checkCount()}</span>\r\n                <button onClick={() => this.props.onIncrement(this.props.nums)} className=\"btn btn-sm btn-success\">\r\n                    Increment\r\n                </button>\r\n                <button onClick={() => this.props.onDelete(this.props.nums.id)} className=\"btn btn-sm btn-danger ml-3\">\r\n                    Delete\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getBadgeClasses() {\r\n        let classes = \"badge mx-3 badge-\";\r\n        classes += this.props.nums.value === 0 ? \"warning\" : \"primary\";\r\n        return classes;\r\n    }\r\n\r\n    checkCount() {\r\n        const { value } = this.props.nums;\r\n        return value === 0 ? \"zero\" : value;\r\n    }\r\n}\r\n\r\nexport default Counter;\r\n","import React, { Component } from \"react\";\r\nimport Counter from \"./counter\";\r\n\r\nclass Counters extends Component {\r\n    render() {\r\n        console.log(\"Counters - Render\");\r\n        const { onReset, counters, onIncrement, onDecrement, onDelete } = this.props;\r\n\r\n        return (\r\n            <div className=\"wrapper\">\r\n                <button onClick={onReset} className=\"btn btn-sm btn-primary mb-4\">\r\n                    Reset\r\n                </button>\r\n                {counters.map((counter) => (\r\n                    <Counter key={counter.id} onIncrement={onIncrement} onDecrement={onDecrement} onDelete={onDelete} nums={counter} />\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Counters;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Navbar from './components/navbar';\nimport Counters from './components/counters';\n\nclass App extends Component {\n  state = {\n    counters: [\n      { id: 1, value: 0 },\n      { id: 2, value: 7 },\n      { id: 3, value: 3 },\n      { id: 4, value: 2 },\n    ],\n  };\n\n  constructor() {\n    super();\n    console.log(\"App - Constructor\");\n  }\n\n  componentDidMount() {\n    console.log(\"App - Mount\");\n  }\n\n  handleReset = () => {\n    const counters = this.state.counters.map((c) => {\n      c.value = 0;\n      return c;\n    });\n\n    this.setState({ counters });\n  };\n\n  handleDelete = (counterId) => {\n    const counters = this.state.counters.filter((c) => c.id !== counterId);\n    this.setState({ counters: counters });\n  };\n\n  handleIncrement = (counter) => {\n    const counters = [...this.state.counters];\n    const index = counters.indexOf(counter);\n    counters[index] = { ...counter };\n    counters[index].value++;\n    this.setState({ counters });\n  };\n\n  handleDecrement = (counter) => {\n    let counters = this.state.counters.map((c) => {\n      if (counter.props.nums.value !== 0 && c.id === counter.props.nums.id) c.value--;\n\n      return c;\n    });\n\n    this.setState({ counters });\n  };\n\n  badgeCount = () => {\n    let sum = 0;\n    this.state.counters.map(c => {\n      return sum += c.value;\n    });\n\n    return sum;\n  }\n\n  render() {\n    console.log(\"App - Render\");\n    return (\n      <React.Fragment>\n        <Navbar badgeNumber={this.badgeCount} />\n        <Counters counters={this.state.counters} onIncrement={this.handleIncrement} onDecrement={this.handleDecrement} onReset={this.handleReset} onDelete={this.handleDelete} />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}